name: Instafel APK Patcher (Android 15 Compatible)

on:
  workflow_dispatch:
    inputs:
      instagram_apk_url:
        description: 'Instagram APK/AAB/APKM/XAPK Download URL'
        required: true
        type: string
      apk_version:
        description: 'APK Version (for naming)'
        required: true
        type: string
        default: 'latest'

jobs:
  patch-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Instafel Repository
      uses: actions/checkout@v4
      with:
        repository: mamiiblt/instafel
        path: instafel
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Android SDK (Updated for Android 15)
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        target: android-34
        
    - name: Accept Android SDK Licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    
    - name: Install APK Tools & Required Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apktool zipalign unzip xmlstarlet jq wget curl
        
        # Install latest apktool
        wget -q https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
        wget -q https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.9.3.jar
        chmod +x apktool
        sudo mv apktool /usr/local/bin/
        sudo mv apktool_2.9.3.jar /usr/local/bin/apktool.jar
        
        # Install uber-apk-signer
        wget -q https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar
        chmod +x uber-apk-signer-1.3.0.jar
        sudo mv uber-apk-signer-1.3.0.jar /usr/local/bin/uber-apk-signer.jar
        
        # Install bundletool
        wget -q https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
        chmod +x bundletool-all-1.15.6.jar
        sudo mv bundletool-all-1.15.6.jar /usr/local/bin/bundletool.jar
        
        echo "$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
    
    - name: Download Instagram Bundle/APK
      run: |
        mkdir -p downloads
        cd downloads
        
        for i in {1..3}; do
          echo "Download attempt $i..."
          if curl -L \
            -H "User-Agent: Mozilla/5.0" \
            --max-time 300 \
            --retry 3 \
            --retry-delay 5 \
            -o instagram-file \
            "${{ github.event.inputs.instagram_apk_url }}"; then
            break
          elif [ $i -eq 3 ]; then
            exit 1
          fi
          sleep 10
        done
        
        if [ ! -f instagram-file ] || [ ! -s instagram-file ]; then
          exit 1
        fi
        
        file_type=$(file instagram-file)
        url_lower=$(echo "${{ github.event.inputs.instagram_apk_url }}" | tr '[:upper:]' '[:lower:]')
        
        if [[ $url_lower == *".xapk"* ]] || [[ $file_type == *"Zip archive"* ]]; then
          if unzip -l instagram-file 2>/dev/null | grep -q "manifest.json\|icon.png"; then
            mv instagram-file instagram-alpha.xapk
            echo "BUNDLE_TYPE=xapk" >> $GITHUB_ENV
          elif unzip -l instagram-file 2>/dev/null | grep -q "base.apk\|split_config"; then
            mv instagram-file instagram-alpha.apkm
            echo "BUNDLE_TYPE=apkm" >> $GITHUB_ENV
          else
            mv instagram-file instagram-alpha.apk
            echo "BUNDLE_TYPE=apk" >> $GITHUB_ENV
          fi
        elif [[ $url_lower == *".apkm"* ]]; then
          mv instagram-file instagram-alpha.apkm
          echo "BUNDLE_TYPE=apkm" >> $GITHUB_ENV
        elif [[ $url_lower == *".aab"* ]]; then
          mv instagram-file instagram-alpha.aab
          echo "BUNDLE_TYPE=aab" >> $GITHUB_ENV
        else
          mv instagram-file instagram-alpha.apk
          echo "BUNDLE_TYPE=apk" >> $GITHUB_ENV
        fi
        
        mv instagram-alpha.* ../
        cd ..
    
    - name: Setup Gradle
      run: |
        cd instafel
        chmod +x gradlew
        ./gradlew --version
    
    - name: Build Instafel Patcher
      run: |
        cd instafel
        
        if grep -r "keystores/instafel-app.jks" . 2>/dev/null; then
          mkdir -p config/keystores
          keytool -genkey -v -keystore config/keystores/instafel-app.jks \
            -alias instafel \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass dummy123 -keypass dummy123 \
            -dname "CN=Dummy, OU=Build, O=GitHub, L=Actions, S=CI, C=US"
        fi
        
        ./gradlew assembleDebug || ./gradlew build -x validateSigningRelease || ./gradlew assemble
        
        find . -name "*.jar" -type f | grep -E "(patcher|instafel)" || true
        find . -name "*.apk" -type f || true
    
    - name: Convert Bundle/APKM to APK and Patch for Android 15
      run: |
        mkdir -p workspace
        cd workspace
        
        if [[ "$BUNDLE_TYPE" == "xapk" ]]; then
          cp ../instagram-alpha.xapk ./
          mkdir xapk_extracted
          unzip instagram-alpha.xapk -d xapk_extracted/
          cp $(find xapk_extracted/ -name "*.apk" | sort -nr | head -n1) instagram-alpha.apk
        elif [[ "$BUNDLE_TYPE" == "apkm" ]]; then
          cp ../instagram-alpha.apkm ./
          mkdir apkm_extracted
          unzip instagram-alpha.apkm -d apkm_extracted/
          cp $(find apkm_extracted/ -name "*.apk" | sort -nr | head -n1) instagram-alpha.apk
        elif [[ "$BUNDLE_TYPE" == "aab" ]]; then
          cp ../instagram-alpha.aab ./
          cat > device-spec.json <<EOF
{
  "supportedAbis": ["arm64-v8a", "armeabi-v7a"],
  "supportedLocales": ["en"],
  "screenDensity": 420,
  "sdkVersion": 34
}
EOF
          java -jar /usr/local/bin/bundletool.jar build-apks \
            --bundle=instagram-alpha.aab \
            --output=instagram-alpha.apks \
            --device-spec=device-spec.json \
            --mode=universal
          unzip instagram-alpha.apks
          cp universal.apk instagram-alpha.apk
        else
          cp ../instagram-alpha.apk ./
        fi
        
        apktool d instagram-alpha.apk -o instagram-decompiled --force-all --api-level 34
        
        manifest_path="instagram-decompiled/AndroidManifest.xml"
        if [ -f "$manifest_path" ]; then
          cp "$manifest_path" "${manifest_path}.backup"
          sed -i 's/android:targetSdkVersion="[0-9]*"/android:targetSdkVersion="34"/' "$manifest_path"
          sed -i 's/android:compileSdkVersion="[0-9]*"/android:compileSdkVersion="34"/' "$manifest_path"
          if ! grep -q "android.permission.POST_NOTIFICATIONS" "$manifest_path"; then
            sed -i '/<uses-permission android:name="android.permission.INTERNET"/a\    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />' "$manifest_path"
          fi
          if grep -q "android.permission.FOREGROUND_SERVICE" "$manifest_path"; then
            if ! grep -q "android:foregroundServiceType" "$manifest_path"; then
              sed -i 's/<service android:name="\([^"]*\)"/<service android:name="\1" android:foregroundServiceType="mediaPlayback"/' "$manifest_path"
            fi
          fi
          sed -i '/android:name="android.permission.WRITE_EXTERNAL_STORAGE"/d' "$manifest_path"
        fi
        
        apktool_yml="instagram-decompiled/apktool.yml"
        [ -f "$apktool_yml" ] && sed -i 's/targetSdkVersion: .*/targetSdkVersion: 34/' "$apktool_yml" && sed -i 's/compileSdkVersion: .*/compileSdkVersion: 34/' "$apktool_yml"
        
        apktool b instagram-decompiled -o instagram-patched-unsigned.apk --api-level 34
    
    - name: Sign APK with Android 15 Compatibility
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'defaultpass123' }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS || 'mykey' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'defaultpass123' }}
      run: |
        cd workspace
        keytool -genkey -v -keystore release-key.keystore \
          -alias "$KEY_ALIAS" -keyalg RSA -keysize 2048 -validity 10000 \
          -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" \
          -dname "CN=Developer, OU=Development, O=Company, L=City, ST=State, C=US"
        
        $ANDROID_HOME/build-tools/34.0.0/zipalign -v 4 instagram-patched-unsigned.apk instagram-patched-aligned.apk
        
        $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
          --ks release-key.keystore \
          --ks-key-alias "$KEY_ALIAS" \
          --ks-pass pass:"$KEYSTORE_PASSWORD" \
          --key-pass pass:"$KEY_PASSWORD" \
          --v1-signing-enabled true \
          --v2-signing-enabled true \
          --v3-signing-enabled true \
          --out instagram-instafel-${{ github.event.inputs.apk_version }}.apk \
          instagram-patched-aligned.apk
        
        $ANDROID_HOME/build-tools/34.0.0/apksigner verify --verbose instagram-instafel-${{ github.event.inputs.apk_version }}.apk
    
    - name: Upload Patched APK
      uses: actions/upload-artifact@v4
      with:
        name: instafel-patched-apk-${{ github.event.inputs.apk_version }}
        path: workspace/instagram-instafel-${{ github.event.inputs.apk_version }}.apk
        retention-days: 30
        
    - name: Generate Installation Instructions
      run: |
        cd workspace
        cat <<EOF > installation-instructions.md
# Installation Instructions for Android 15

## Before Installing:
1. **Enable Developer Options**: Go to Settings > About phone > Tap "Build number" 7 times
2. **Enable USB Debugging**: Settings > Developer options > USB debugging
3. **Allow Unknown Sources**: Settings > Security > Unknown sources (or Install unknown apps)

## Installation:
1. Download the APK file
2. Transfer to your Android 15 device
3. Open file manager and tap the APK
4. If prompted, allow installation from unknown sources
5. Tap "Install"

## Troubleshooting:
- **"App not compatible"**: Make sure you're using the correct APK for your device architecture
- **"Installation blocked"**: Check Play Protect settings and disable if necessary
- **"Signature mismatch"**: Uninstall original Instagram first

## Android 15 Specific Notes:
- This APK has been compiled with targetSdkVersion 34 for Android 15 compatibility
- Notification permissions will be requested on first launch
- Some features may require additional permissions on Android 15

## Support:
If you encounter issues, check:
1. Device architecture (arm64-v8a vs armeabi-v7a)
2. Available storage space
3. Android version compatibility
EOF

    - name: Upload Installation Instructions
      uses: actions/upload-artifact@v4
      with:
        name: installation-instructions
        path: workspace/installation-instructions.md
        retention-days: 30
